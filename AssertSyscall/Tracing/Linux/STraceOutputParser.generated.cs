//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssertSyscall.Tracing.Linux;

internal partial class STraceOutputParser
{
    static STraceOutputParser()
    {
        KnownFunctions["adjtimex"] = new(SyscallCategory.Clock, SyscallType.Modify, "adjust_time", new FuncParams());
        KnownFunctions["clock_adjtime"] = new(SyscallCategory.Clock, SyscallType.Modify, "adjust_time", new FuncParams());
        KnownFunctions["ntp_adjtime"] = new(SyscallCategory.Clock, SyscallType.Modify, "adjust_time", new FuncParams());
        KnownFunctions["clock_getres"] = new(SyscallCategory.Clock, SyscallType.Read, "clock_get_resolution", new FuncParams());
        KnownFunctions["clock_gettime"] = new(SyscallCategory.Clock, SyscallType.Read, "clock_get_time", new FuncParams());
        KnownFunctions["clock_settime"] = new(SyscallCategory.Clock, SyscallType.Modify, "clock_set_time", new FuncParams());
        KnownFunctions["gettimeofday"] = new(SyscallCategory.Clock, SyscallType.Read, "get_time_of_day", new FuncParams());
        KnownFunctions["settimeofday"] = new(SyscallCategory.Clock, SyscallType.Modify, "set_time_of_day", new FuncParams());
        KnownFunctions["time"] = new(SyscallCategory.Clock, SyscallType.Read, "time", new FuncParams());
        KnownFunctions["gettid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_TID", new FuncParams());
        KnownFunctions["getpid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_PID", new FuncParams());
        KnownFunctions["getppid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_PPID", new FuncParams());
        KnownFunctions["getsid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_SID", new FuncParams());
        KnownFunctions["setsid"] = new(SyscallCategory.Credentials, SyscallType.Create, "set_SID", new FuncParams());
        KnownFunctions["getgid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_GID", new FuncParams());
        KnownFunctions["setgid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_GID", new FuncParams());
        KnownFunctions["getegid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_EGID", new FuncParams());
        KnownFunctions["setegid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_EGID", new FuncParams());
        KnownFunctions["getpgid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_PGID", new FuncParams());
        KnownFunctions["setpgid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_PGID", new FuncParams());
        KnownFunctions["getpgrp"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_p_group", new FuncParams());
        KnownFunctions["setpgrp"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_p_group", new FuncParams());
        KnownFunctions["getgroups"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_groups", new FuncParams());
        KnownFunctions["setgroups"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_groups", new FuncParams());
        KnownFunctions["getresgid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_r_e_s_GID", new FuncParams());
        KnownFunctions["setresgid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_r_e_s_GID", new FuncParams());
        KnownFunctions["setfsgid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_fs_GID", new FuncParams());
        KnownFunctions["setfsuid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_fs_UID", new FuncParams());
        KnownFunctions["setregid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_r_e_GID", new FuncParams());
        KnownFunctions["setreuid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_r_e_UID", new FuncParams().Add("ruid", v => v.Arg(0)).Add("euid", v => v.Arg(1)));
        KnownFunctions["getuid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_UID", new FuncParams());
        KnownFunctions["setuid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_UID", new FuncParams().Add("uid", v => v.Arg(0)));
        KnownFunctions["geteuid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_EUID", new FuncParams());
        KnownFunctions["seteuid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_EUID", new FuncParams().Add("euid", v => v.Arg(0)));
        KnownFunctions["getresuid"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_r_e_s_UID", new FuncParams());
        KnownFunctions["setresuid"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_r_e_s_UID", new FuncParams().Add("ruid", v => v.Arg(0)).Add("euid", v => v.Arg(1)).Add("suid", v => v.Arg(2)));
        KnownFunctions["getrlimit"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_r_limit", new FuncParams());
        KnownFunctions["setrlimit"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_r_limit", new FuncParams());
        KnownFunctions["getrusage"] = new(SyscallCategory.Credentials, SyscallType.Stat, "get_r_usage", new FuncParams());
        KnownFunctions["getpriority"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_priority", new FuncParams());
        KnownFunctions["setpriority"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_priority", new FuncParams().Add("which", v => v.Arg(0)).Add("who", v => v.Arg(1)));
        KnownFunctions["capget"] = new(SyscallCategory.Credentials, SyscallType.Read, "cap_get", new FuncParams());
        KnownFunctions["capset"] = new(SyscallCategory.Credentials, SyscallType.Modify, "cap_set", new FuncParams());
        KnownFunctions["prctl"] = new(SyscallCategory.Credentials, SyscallType.Modify, "pr_ctl", new FuncParams().Add("op", v => v.Arg(0)));
        KnownFunctions["getrandom"] = new(SyscallCategory.Credentials, SyscallType.Read, "get_random", new FuncParams());
        KnownFunctions["setns"] = new(SyscallCategory.Credentials, SyscallType.Modify, "set_ns", new FuncParams());
        KnownFunctions["pivot_root"] = new(SyscallCategory.Credentials, SyscallType.Modify, "pivot_root", new FuncParams().Add("target", v => v.Arg(0)).Add("source", v => v.Arg(1)));
        KnownFunctions["clone"] = new(SyscallCategory.Process, SyscallType.Create, "clone", new FuncParams());
        KnownFunctions["fork"] = new(SyscallCategory.Process, SyscallType.Create, "fork", new FuncParams());
        KnownFunctions["vfork"] = new(SyscallCategory.Process, SyscallType.Create, "v_fork", new FuncParams());
        KnownFunctions["execve"] = new(SyscallCategory.Process, SyscallType.Create, "exec", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fexecve"] = new(SyscallCategory.Process, SyscallType.Create, "exec", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["execveat"] = new(SyscallCategory.Process, SyscallType.Create, "exec", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["kill"] = new(SyscallCategory.Process, SyscallType.Modify, "kill", new FuncParams().Add("pid", v => v.Arg(0)).Add("sig", v => v.Arg(1)));
        KnownFunctions["reboot"] = new(SyscallCategory.Process, SyscallType.Modify, "reboot", new FuncParams());
        KnownFunctions["kexec_load"] = new(SyscallCategory.Process, SyscallType.Modify, "k_exec_load", new FuncParams());
        KnownFunctions["kexec_file_load"] = new(SyscallCategory.Process, SyscallType.Modify, "k_exec_load", new FuncParams());
        KnownFunctions["modify_ldt"] = new(SyscallCategory.Process, SyscallType.Modify, "modify_ldt", new FuncParams());
        KnownFunctions["init_module"] = new(SyscallCategory.Process, SyscallType.Modify, "init_module", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["finit_module"] = new(SyscallCategory.Process, SyscallType.Modify, "init_module", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["perf_event_open"] = new(SyscallCategory.Process, SyscallType.Stat, "perf_event_open", new FuncParams());
        KnownFunctions["sync"] = new(SyscallCategory.File, SyscallType.Modify, "sync_fs", new FuncParams());
        KnownFunctions["syncfs"] = new(SyscallCategory.File, SyscallType.Modify, "sync_fs", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fsync"] = new(SyscallCategory.File, SyscallType.Modify, "f_sync", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fdatasync"] = new(SyscallCategory.File, SyscallType.Modify, "f_sync", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["sync_file_range"] = new(SyscallCategory.File, SyscallType.Modify, "sync_file_range", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["acct"] = new(SyscallCategory.File, SyscallType.Modify, "acct", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["chdir"] = new(SyscallCategory.File, SyscallType.Modify, "ch_dir", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fchdir"] = new(SyscallCategory.File, SyscallType.Modify, "ch_dir", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["chmod"] = new(SyscallCategory.File, SyscallType.Modify, "ch_mod", new FuncParams().Add("path", v => v.Arg(0)).Add("mod", v => v.Arg(1)));
        KnownFunctions["fchmod"] = new(SyscallCategory.File, SyscallType.Modify, "ch_mod", new FuncParams().Add("path", v => v.Arg(0)).Add("mod", v => v.Arg(1)));
        KnownFunctions["fchmodat"] = new(SyscallCategory.File, SyscallType.Modify, "ch_mod", new FuncParams().Add("path", v => v.JoinPaths(0, 1)).Add("mod", v => v.Arg(2)));
        KnownFunctions["chown"] = new(SyscallCategory.File, SyscallType.Modify, "ch_own", new FuncParams().Add("path", v => v.Arg(0)).Add("owner", v => v.Arg(1)).Add("group", v => v.Arg(2)));
        KnownFunctions["fchown"] = new(SyscallCategory.File, SyscallType.Modify, "ch_own", new FuncParams().Add("path", v => v.Arg(0)).Add("owner", v => v.Arg(1)).Add("group", v => v.Arg(2)));
        KnownFunctions["lchown"] = new(SyscallCategory.File, SyscallType.Modify, "ch_own", new FuncParams().Add("path", v => v.Arg(0)).Add("owner", v => v.Arg(1)).Add("group", v => v.Arg(2)));
        KnownFunctions["fchownat"] = new(SyscallCategory.File, SyscallType.Modify, "ch_own", new FuncParams().Add("path", v => v.JoinPaths(0, 1)).Add("owner", v => v.Arg(2)).Add("group", v => v.Arg(3)));
        KnownFunctions["open"] = new(SyscallCategory.File, SyscallType.Create, "open", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["openat"] = new(SyscallCategory.File, SyscallType.Create, "open", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["openat2"] = new(SyscallCategory.File, SyscallType.Create, "open", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["creat"] = new(SyscallCategory.File, SyscallType.Create, "create", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["close"] = new(SyscallCategory.File, SyscallType.Modify, "close", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["copy_file_range"] = new(SyscallCategory.File, SyscallType.Modify, "copy_file_range", new FuncParams().Add("source", v => v.Arg(0)).Add("target", v => v.Arg(2)));
        KnownFunctions["sendfile"] = new(SyscallCategory.File, SyscallType.Modify, "send_file", new FuncParams().Add("source", v => v.Arg(0)).Add("target", v => v.Arg(1)));
        KnownFunctions["flock"] = new(SyscallCategory.File, SyscallType.Modify, "f_lock", new FuncParams().Add("file", v => v.Arg(0)).Add("op", v => v.Arg(1)));
        KnownFunctions["getxattr"] = new(SyscallCategory.File, SyscallType.Read, "get_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["lgetxattr"] = new(SyscallCategory.File, SyscallType.Read, "get_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["fgetxattr"] = new(SyscallCategory.File, SyscallType.Read, "get_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["listxattr"] = new(SyscallCategory.File, SyscallType.Read, "list_x_attr", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["llistxattr"] = new(SyscallCategory.File, SyscallType.Read, "list_x_attr", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["flistxattr"] = new(SyscallCategory.File, SyscallType.Read, "list_x_attr", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["setxattr"] = new(SyscallCategory.File, SyscallType.Modify, "set_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["lsetxattr"] = new(SyscallCategory.File, SyscallType.Modify, "set_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["fsetxattr"] = new(SyscallCategory.File, SyscallType.Modify, "set_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["removexattr"] = new(SyscallCategory.File, SyscallType.Modify, "remove_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["lremovexattr"] = new(SyscallCategory.File, SyscallType.Modify, "remove_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["fremovexattr"] = new(SyscallCategory.File, SyscallType.Modify, "remove_x_attr", new FuncParams().Add("file", v => v.Arg(0)).Add("attr", v => v.Arg(1)));
        KnownFunctions["truncate"] = new(SyscallCategory.File, SyscallType.Modify, "truncate", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["ftruncate"] = new(SyscallCategory.File, SyscallType.Modify, "truncate", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["futimesat"] = new(SyscallCategory.File, SyscallType.Modify, "utime", new FuncParams().Add("file", v => v.JoinPaths(0, 1)));
        KnownFunctions["utimensat"] = new(SyscallCategory.File, SyscallType.Modify, "utime", new FuncParams().Add("file", v => v.JoinPaths(0, 1)));
        KnownFunctions["futimens"] = new(SyscallCategory.File, SyscallType.Modify, "utime", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["utime"] = new(SyscallCategory.File, SyscallType.Modify, "utime", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["utimes"] = new(SyscallCategory.File, SyscallType.Modify, "utime", new FuncParams().Add("file", v => v.Arg(0)));
        KnownFunctions["getcwd"] = new(SyscallCategory.File, SyscallType.Read, "getcwd", new FuncParams());
        KnownFunctions["getdents"] = new(SyscallCategory.File, SyscallType.Read, "get_dir_entries", new FuncParams().Add("dir", v => v.Arg(0)));
        KnownFunctions["getdents64"] = new(SyscallCategory.File, SyscallType.Read, "get_dir_entries", new FuncParams().Add("dir", v => v.Arg(0)));
        KnownFunctions["inotify_add_watch"] = new(SyscallCategory.File, SyscallType.Modify, "i_notify_add_watch", new FuncParams().Add("path", v => v.Arg(1)));
        KnownFunctions["ioctl"] = new(SyscallCategory.File, SyscallType.Modify, "io_ctl", new FuncParams().Add("path", v => v.Arg(0)).Add("op", v => v.Arg(1)));
        KnownFunctions["symlink"] = new(SyscallCategory.File, SyscallType.Create, "sym_link", new FuncParams().Add("path", v => v.Arg(0)).Add("alias", v => v.Arg(1)));
        KnownFunctions["symlinkat"] = new(SyscallCategory.File, SyscallType.Create, "sym_link", new FuncParams().Add("path", v => v.Arg(0)).Add("alias", v => v.JoinPaths(1, 2)));
        KnownFunctions["readlink"] = new(SyscallCategory.File, SyscallType.Read, "read_link", new FuncParams().Add("alias", v => v.Arg(0)));
        KnownFunctions["readlinkat"] = new(SyscallCategory.File, SyscallType.Read, "read_link", new FuncParams().Add("alias", v => v.JoinPaths(0, 1)));
        KnownFunctions["link"] = new(SyscallCategory.File, SyscallType.Create, "link", new FuncParams().Add("path", v => v.Arg(0)).Add("alias", v => v.Arg(1)));
        KnownFunctions["linkat"] = new(SyscallCategory.File, SyscallType.Create, "link", new FuncParams().Add("path", v => v.JoinPaths(0, 1)).Add("alias", v => v.JoinPaths(2, 3)));
        KnownFunctions["unlink"] = new(SyscallCategory.File, SyscallType.Delete, "un_link", new FuncParams().Add("alias", v => v.Arg(0)));
        KnownFunctions["unlinkat"] = new(SyscallCategory.File, SyscallType.Delete, "un_linkat", new FuncParams().Add("alias", v => v.JoinPaths(0, 1)));
        KnownFunctions["rename"] = new(SyscallCategory.File, SyscallType.Modify, "rename", new FuncParams().Add("source", v => v.Arg(0)).Add("target", v => v.Arg(1)));
        KnownFunctions["renameat"] = new(SyscallCategory.File, SyscallType.Modify, "rename", new FuncParams().Add("source", v => v.JoinPaths(0, 1)).Add("target", v => v.JoinPaths(2, 3)));
        KnownFunctions["renameat2"] = new(SyscallCategory.File, SyscallType.Modify, "rename", new FuncParams().Add("source", v => v.JoinPaths(0, 1)).Add("target", v => v.JoinPaths(2, 3)));
        KnownFunctions["mkdir"] = new(SyscallCategory.File, SyscallType.Create, "mk_dir", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["mkdirat"] = new(SyscallCategory.File, SyscallType.Create, "mk_dir", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["rmdir"] = new(SyscallCategory.File, SyscallType.Delete, "rm_dir", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["mknod"] = new(SyscallCategory.File, SyscallType.Create, "mk_nod", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["mknodat"] = new(SyscallCategory.File, SyscallType.Create, "mk_nod", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["mmap"] = new(SyscallCategory.File, SyscallType.Modify, "m_map", new FuncParams().Add("path", v => v.Arg(4)));
        KnownFunctions["msync"] = new(SyscallCategory.File, SyscallType.Modify, "m_sync", new FuncParams());
        KnownFunctions["mount"] = new(SyscallCategory.File, SyscallType.Create, "mount", new FuncParams().Add("source", v => v.Arg(0)).Add("target", v => v.Arg(1)));
        KnownFunctions["umount"] = new(SyscallCategory.File, SyscallType.Delete, "umount", new FuncParams().Add("target", v => v.Arg(0)));
        KnownFunctions["umount2"] = new(SyscallCategory.File, SyscallType.Delete, "umount", new FuncParams().Add("target", v => v.Arg(0)));
        KnownFunctions["read"] = new(SyscallCategory.File, SyscallType.Read, "read", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pread"] = new(SyscallCategory.File, SyscallType.Read, "read", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pread64"] = new(SyscallCategory.File, SyscallType.Read, "read", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["readv"] = new(SyscallCategory.File, SyscallType.Read, "read", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["preadv"] = new(SyscallCategory.File, SyscallType.Read, "read", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["preadv2"] = new(SyscallCategory.File, SyscallType.Read, "read", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["readahead"] = new(SyscallCategory.File, SyscallType.Read, "read_ahead", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["write"] = new(SyscallCategory.File, SyscallType.Modify, "write", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pwrite"] = new(SyscallCategory.File, SyscallType.Modify, "write", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pwrite64"] = new(SyscallCategory.File, SyscallType.Modify, "write", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["writev"] = new(SyscallCategory.File, SyscallType.Modify, "write", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pwritev"] = new(SyscallCategory.File, SyscallType.Modify, "write", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pwritev2"] = new(SyscallCategory.File, SyscallType.Modify, "write", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["quotactl"] = new(SyscallCategory.File, SyscallType.Modify, "quota_ctl", new FuncParams().Add("op", v => v.Arg(0)));
        KnownFunctions["swapon"] = new(SyscallCategory.File, SyscallType.Modify, "swapon", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["swapoff"] = new(SyscallCategory.File, SyscallType.Modify, "swapoff", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["stat"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fstat"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["lstat"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fstatat"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["newfstatat"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["fstatat64"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.JoinPaths(0, 1)));
        KnownFunctions["statx"] = new(SyscallCategory.File, SyscallType.Stat, "stat", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["statfs"] = new(SyscallCategory.File, SyscallType.Stat, "stat_fs", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["fstatfs"] = new(SyscallCategory.File, SyscallType.Stat, "stat_fs", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["ustat"] = new(SyscallCategory.File, SyscallType.Stat, "stat_fs", new FuncParams());
        KnownFunctions["io_uring_setup"] = new(SyscallCategory.File, SyscallType.Create, "io_uring_setup", new FuncParams());
        KnownFunctions["io_uring_queue_init"] = new(SyscallCategory.File, SyscallType.Create, "io_uring_setup", new FuncParams());
        KnownFunctions["io_uring_queue_init_params"] = new(SyscallCategory.File, SyscallType.Create, "io_uring_setup", new FuncParams());
        KnownFunctions["io_uring_queue_init_mem"] = new(SyscallCategory.File, SyscallType.Create, "io_uring_setup", new FuncParams());
        KnownFunctions["io_uring_enter"] = new(SyscallCategory.File, SyscallType.Modify, "io_uring_enter", new FuncParams());
        KnownFunctions["io_uring_enter2"] = new(SyscallCategory.File, SyscallType.Modify, "io_uring_enter", new FuncParams());
        KnownFunctions["io_uring_get_sqe"] = new(SyscallCategory.File, SyscallType.Read, "io_uring_get_sqe", new FuncParams());
        KnownFunctions["io_uring_prep_read"] = new(SyscallCategory.File, SyscallType.Read, "io_uring_prep_read", new FuncParams());
        KnownFunctions["io_uring_prep_readv"] = new(SyscallCategory.File, SyscallType.Read, "io_uring_prep_read", new FuncParams());
        KnownFunctions["io_uring_prep_readv2"] = new(SyscallCategory.File, SyscallType.Read, "io_uring_prep_read", new FuncParams());
        KnownFunctions["io_uring_prep_write"] = new(SyscallCategory.File, SyscallType.Modify, "io_uring_prep_write ", new FuncParams());
        KnownFunctions["io_uring_prep_writev"] = new(SyscallCategory.File, SyscallType.Modify, "io_uring_prep_write ", new FuncParams());
        KnownFunctions["io_uring_prep_writev2"] = new(SyscallCategory.File, SyscallType.Modify, "io_uring_prep_write ", new FuncParams());
        KnownFunctions["io_uring_submit"] = new(SyscallCategory.File, SyscallType.Modify, "io_uring_submit", new FuncParams());
        KnownFunctions["io_uring_wait_cqe"] = new(SyscallCategory.File, SyscallType.Read, "io_uring_wait_cqe", new FuncParams());
        KnownFunctions["io_uring_queue_exit"] = new(SyscallCategory.File, SyscallType.Delete, "io_uring_queue_exit", new FuncParams());
        KnownFunctions["mq_open"] = new(SyscallCategory.IPC, SyscallType.Create, "mq_open", new FuncParams());
        KnownFunctions["mq_send"] = new(SyscallCategory.IPC, SyscallType.Modify, "mq_send", new FuncParams());
        KnownFunctions["mq_timedsend"] = new(SyscallCategory.IPC, SyscallType.Modify, "mq_send", new FuncParams());
        KnownFunctions["mq_receive"] = new(SyscallCategory.IPC, SyscallType.Read, "mq_receive", new FuncParams());
        KnownFunctions["mq_timedreceive"] = new(SyscallCategory.IPC, SyscallType.Read, "mq_receive", new FuncParams());
        KnownFunctions["splice"] = new(SyscallCategory.IPC, SyscallType.Modify, "splice", new FuncParams().Add("source", v => v.Arg(0)).Add("target", v => v.Arg(1)));
        KnownFunctions["vmsplice"] = new(SyscallCategory.IPC, SyscallType.Modify, "vmsplice", new FuncParams());
        KnownFunctions["pipe"] = new(SyscallCategory.IPC, SyscallType.Read, "pipe", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["pipe2"] = new(SyscallCategory.IPC, SyscallType.Read, "pipe2", new FuncParams().Add("path", v => v.Arg(0)));
        KnownFunctions["tee"] = new(SyscallCategory.IPC, SyscallType.Read, "tee", new FuncParams().Add("source", v => v.Arg(0)).Add("target", v => v.Arg(1)));
        KnownFunctions["msgctl"] = new(SyscallCategory.IPC, SyscallType.Modify, "msg_ctl", new FuncParams());
        KnownFunctions["msgrcv"] = new(SyscallCategory.IPC, SyscallType.Read, "msgrcv", new FuncParams());
        KnownFunctions["msgsnd"] = new(SyscallCategory.IPC, SyscallType.Modify, "msgsnd", new FuncParams());
        KnownFunctions["socketpair"] = new(SyscallCategory.IPC, SyscallType.Create, "socket_pair", new FuncParams());
        KnownFunctions["mlock"] = new(SyscallCategory.Memory, SyscallType.Modify, "m_lock", new FuncParams());
        KnownFunctions["mlock2"] = new(SyscallCategory.Memory, SyscallType.Modify, "m_lock", new FuncParams());
        KnownFunctions["mlockall"] = new(SyscallCategory.Memory, SyscallType.Modify, "m_lock", new FuncParams());
        KnownFunctions["munlock"] = new(SyscallCategory.Memory, SyscallType.Modify, "m_unlock", new FuncParams());
        KnownFunctions["munlockall"] = new(SyscallCategory.Memory, SyscallType.Modify, "m_unlock", new FuncParams());
        KnownFunctions["socket"] = new(SyscallCategory.Network, SyscallType.Create, "socket", new FuncParams());
        KnownFunctions["bind"] = new(SyscallCategory.Network, SyscallType.Modify, "bind", new FuncParams());
        KnownFunctions["listen"] = new(SyscallCategory.Network, SyscallType.Modify, "listen", new FuncParams());
        KnownFunctions["accept"] = new(SyscallCategory.Network, SyscallType.Modify, "accept", new FuncParams());
        KnownFunctions["accept4"] = new(SyscallCategory.Network, SyscallType.Modify, "accept", new FuncParams());
        KnownFunctions["connect"] = new(SyscallCategory.Network, SyscallType.Modify, "connect", new FuncParams());
        KnownFunctions["recv"] = new(SyscallCategory.Network, SyscallType.Read, "recv", new FuncParams());
        KnownFunctions["recvfrom"] = new(SyscallCategory.Network, SyscallType.Read, "recv", new FuncParams());
        KnownFunctions["recvmsg"] = new(SyscallCategory.Network, SyscallType.Read, "recv", new FuncParams());
        KnownFunctions["recvmmsg"] = new(SyscallCategory.Network, SyscallType.Read, "recv", new FuncParams());
        KnownFunctions["send"] = new(SyscallCategory.Network, SyscallType.Modify, "send", new FuncParams());
        KnownFunctions["sendto"] = new(SyscallCategory.Network, SyscallType.Modify, "send", new FuncParams());
        KnownFunctions["sendmsg"] = new(SyscallCategory.Network, SyscallType.Modify, "send", new FuncParams());
        KnownFunctions["sendmmsg"] = new(SyscallCategory.Network, SyscallType.Modify, "send", new FuncParams());
        KnownFunctions["shutdown"] = new(SyscallCategory.Network, SyscallType.Modify, "shutdown", new FuncParams());
    }
}
